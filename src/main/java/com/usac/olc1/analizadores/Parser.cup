/* --------------------------------------
	C O D I G O    D E    U S U A R I O
--------------------------------------- */

// Importaciones y paquetes
package com.usac.olc1.analizadores;
import java_cup.runtime.Symbol;

// Codigo para el parser, variables, metodos
parser code {:
	// Metodo al que se llama automaticamente ante algun error sintactico.
	public void syntax_error(Symbol s){
		int fila = s.right + 1;
		int columna = s.left + 1;
		String lexema = (String) s.value;
		System.err.println("Error Sintactico (Recuperado) Lexema [" + lexema + "] Fila: [" + fila + "] Columna: [" + columna + "]");
	}

	// Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores.
	public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
		int Fila = s.right + 1;
		int Columna = s.left + 1;
		String Lexema = (String) s.value;
		System.out.println("Error Sintactico (No Recuperable) Lexema [" + Lexema + "] Fila: [" + Fila + "] Columna: [" + Columna + "]");
	}
:}

action code {:
	// Codigo para las acciones gramaticales
:}

/* -----------------------------
	D E C L A R A C I O N E S
------------------------------ */

// T E R M I N A L E S
terminal	CONJ;
terminal 	COMA, COMILLAS, DOSPUNTOS, FLECHA, LLAVE_A, LLAVE_C, PUNTOCOMA;
terminal	PORCENTAJE, VIRGULILLA, PUNTO, BARRA, POR, MAS, INTER, SALTO_LINEA;
terminal	SIM_COM_DOB, SIM_COM_SIM; 
terminal	CADENA, NUMERO, ID, SIMBOLO;

// N O    T E R M I N A L E S					
non terminal	inicio, lista_exp, exp;

/* -----------------------------------------------------------------------
					I N I C I O   G R A M A T I C A
------------------------------------------------------------------------- */

start with inicio;

inicio ::= lista_exp exp | exp;
exp ::= 	CONJ | 
			COMA | COMILLAS | DOSPUNTOS | FLECHA | LLAVE_A | LLAVE_C | PUNTOCOMA |
			PORCENTAJE | VIRGULILLA | PUNTO | BARRA | POR | MAS |INTER | SALTO_LINEA |
			SIM_COM_DOB | SIM_COM_SIM |
			CADENA | NUMERO | ID | SIMBOLO ;