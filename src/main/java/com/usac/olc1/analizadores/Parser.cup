/* --------------------------------------
	C O D I G O    D E    U S U A R I O
--------------------------------------- */

// Importaciones y paquetes
package com.usac.olc1.analizadores;
import java_cup.runtime.Symbol;

// Codigo para el parser, variables, metodos
parser code {:
	// Metodo al que se llama automaticamente ante algun error sintactico.
	public void syntax_error(Symbol s){
		int fila = s.right + 1;
		int columna = s.left + 1;
		String lexema = (String) s.value;
		System.err.println("Error Sintactico (Recuperado)\tLexema [" + lexema + "]\tUbicacion: [" + fila + "," + columna + "]");
	}

	// Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores.
	public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
		int fila = s.right + 1;
		int columna = s.left + 1;
		String lexema = (String) s.value;
		System.out.println("Error Sintactico (No Recuperable) Lexema [" + lexema + "]\tUbicacion: [" + fila + "," + columna + "]");
	}
:}

action code {:
	// Codigo para las acciones gramaticales
:}

/* -----------------------------
	D E C L A R A C I O N E S
------------------------------ */

// T E R M I N A L E S
terminal	CONJ, FLECHA;
terminal 	COMA, DOSPUNTOS, LLAVE_A, LLAVE_C, PUNTOCOMA;
terminal	PORCENTAJE, VIRGULILLA, PUNTO, BARRA, POR, MAS, INTER;
terminal	SIMBOLO, SIM_COM_DOB, SIM_COM_SIM, SALTO_LINEA; 
terminal	CADENA, LETRA, NUMERO, ID;

// N O    T E R M I N A L E S					
non terminal	inicio, lista_stmt, stmt, separador, lista_validar;
non terminal	conjunto, definicion, intervalo, listaCaracter;
non terminal	expreRegular, expr, validar;
non terminal	identificador, caracter, especial;


/* -----------------------------------------------------------------------
					I N I C I O   G R A M A T I C A
------------------------------------------------------------------------- */

start with inicio;

inicio 			::= LLAVE_A lista_stmt separador lista_validar LLAVE_C;
lista_stmt 		::= lista_stmt stmt | stmt;
stmt			::= conjunto | expreRegular;
lista_validar	::= lista_validar validar | validar;

//Conjuntos
conjunto 		::=	CONJ DOSPUNTOS identificador FLECHA definicion PUNTOCOMA;
definicion		::=	intervalo | listaCaracter | error;
intervalo		::=	caracter VIRGULILLA caracter;
listaCaracter	::= listaCaracter COMA caracter | caracter;

//Expresiones Regulares
expreRegular	::= identificador FLECHA expr PUNTOCOMA;
expr			::= PUNTO expr expr 
					| BARRA expr expr 
					| POR expr 
					| MAS expr 
					| INTER expr 
					| LLAVE_A identificador LLAVE_C 
					| CADENA 
					| especial
					| error;

//Validar definiciones
validar ::= identificador DOSPUNTOS CADENA PUNTOCOMA | error;

//Otras Declaraciones
separador		::= PORCENTAJE PORCENTAJE PORCENTAJE PORCENTAJE | error;
identificador 	::= ID | LETRA;
caracter 		::= LETRA | NUMERO | SIMBOLO | 
					COMA | DOSPUNTOS | LLAVE_A | LLAVE_C | PUNTOCOMA | PORCENTAJE | 
					PUNTO | BARRA | POR | MAS | INTER |
					especial;
especial		::= SIM_COM_DOB | SIM_COM_SIM | SALTO_LINEA;